services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_APPLICATION__PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: 'postgres:17-alpine'
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - APP_DATABASE__USERNAME=$APP_DATABASE__USERNAME
      - APP_DATABASE__PASSWORD=$APP_DATABASE__PASSWORD
      - APP_DATABASE__DATABASE_NAME=$APP_DATABASE__DATABASE_NAME
    # env_file:
    #   - .env
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 2s
      timeout: 2s
      retries: 10
    networks:
      - app-network
      - postgres-network
  # pgadmin:
  #   image: dpage/pgadmin4
  #   ports:
  #     - "${PGADMIN_PORT:-15433}:80"
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-postgres}
  #     - PGADMIN_CONFIG_SERVER_MODE=False
  #     - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
  #   env_file:
  #     - .env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   user: root
  #   entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
  #   networks:
  #     - postgres-network
  #   volumes:
  #     # - ./docker/pgAdmin/pgpass:/pgpass
  #     - ./docker/pgAdmin/servers.json:/pgadmin4/servers.json
  #     - pgadmin-data:/var/lib/pgadmin/

volumes:
  postgres-data:
  pgadmin-data:


networks:
  postgres-network:
    driver: bridge
  app-network:
    driver: bridge
